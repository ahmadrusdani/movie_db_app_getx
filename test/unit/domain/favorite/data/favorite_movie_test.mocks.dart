// Mocks generated by Mockito 5.4.4 from annotations
// in movie_db_app_getx/test/unit/domain/favorite/data/favorite_movie_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:hive_flutter/hive_flutter.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:movie_db_app_getx/data/model/movie/movie_model.dart' as _i4;
import 'package:movie_db_app_getx/domain/repository/favorite_repository.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [FavoriteRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockFavoriteRepository extends _i1.Mock
    implements _i2.FavoriteRepository {
  MockFavoriteRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.MovieModel>?> getFavoriteMovie() => (super.noSuchMethod(
        Invocation.method(
          #getFavoriteMovie,
          [],
        ),
        returnValue: _i3.Future<List<_i4.MovieModel>?>.value(),
      ) as _i3.Future<List<_i4.MovieModel>?>);

  @override
  _i3.Future<_i5.Box<_i4.MovieModel>?> openBoxFavoriteMovie() =>
      (super.noSuchMethod(
        Invocation.method(
          #openBoxFavoriteMovie,
          [],
        ),
        returnValue: _i3.Future<_i5.Box<_i4.MovieModel>?>.value(),
      ) as _i3.Future<_i5.Box<_i4.MovieModel>?>);

  @override
  _i3.Future<void> setFavorite({required _i4.MovieModel? movie}) =>
      (super.noSuchMethod(
        Invocation.method(
          #setFavorite,
          [],
          {#movie: movie},
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> removeFavorite({required int? movieId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeFavorite,
          [],
          {#movieId: movieId},
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<bool> isFavorite({required int? movieId}) => (super.noSuchMethod(
        Invocation.method(
          #isFavorite,
          [],
          {#movieId: movieId},
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
}
